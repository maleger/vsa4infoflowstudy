 // assume o is 2 on entry
 f1 = alloc();
 f2 = alloc();
 b = alloc();
 *b = f1;
 **b = SENSITIVE;
 *b = f2;
 **b = PUBLIC;
 if (o == 1) {
     *b = f1; }
 if (o == 2) {
     *b = f2; }
 res = *b;
 print(*res);


 ***** MODEL A *****
 f1: ->Mem1            
 f2: ->Mem2            
 b: ->Mem3             
 o: ?
 res: ->Mem1, ->Mem2

 Mem1: SENSITIVE, PUBLIC
 Mem2: SENSITIVE, PUBLIC
 Mem3: ->Mem1, ->Mem2


 ***** MODEL B *****
 f1: ->Mem1            
 f2: ->Mem2            
 b: ->Mem3             
 o: 2
 res: ->Mem2

 Mem1: SENSITIVE
 Mem2: PUBLIC
 Mem3: ->Mem2


This example is inspired by a base object that has two fields, the first of which contains SENSITIVE data and the second of which contains PUBLIC data. We use the base object to set the fields initially and to access them. We force flow to model accessing and printing the second field, which NEVER prints senstive data.

